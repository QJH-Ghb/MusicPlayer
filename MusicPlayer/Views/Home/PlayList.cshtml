@model List<MusicPlayer.Models.SongList>
@{
    Layout = "";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Music Player - Playlist</title>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Open+Sans:300,400">
    <link rel="stylesheet" href="~/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/css/fontawesome-all.min.css">

    <style>
        body {
            margin: 0;
            font-family: 'Open Sans', sans-serif;
            background: radial-gradient(circle at top, #141E30, #243B55);
            color: #fff;
            overflow-x: hidden;
        }

        nav {
            background: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(10px);
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.4);
            padding: 10px 0;
        }

        .nav-link {
            color: #fff !important;
            font-weight: bold;
            transition: 0.3s;
        }

            .nav-link:hover {
                color: #9bc9ff !important;
                text-shadow: 0 0 10px rgba(155, 201, 255, 0.7);
            }

        .playlist-container {
            max-width: 600px;
            margin: 40px auto;
            padding: 20px 25px;
            background: rgba(255,255,255,0.05);
            border-radius: 20px;
            backdrop-filter: blur(10px);
            box-shadow: 0 10px 25px rgba(0,0,0,0.6);
        }

            .playlist-container h2 {
                text-align: center;
                margin-bottom: 20px;
                color: #a8c0ff;
                text-shadow: 0 0 10px rgba(168,192,255,0.6);
            }

        #playlistList {
            list-style: none;
            padding: 0;
            margin: 0;
        }

            #playlistList li {
                display: flex;
                justify-content: space-between;
                align-items: center;
                padding: 12px 15px;
                border-radius: 12px;
                margin-bottom: 10px;
                background: rgba(255,255,255,0.1);
                transition: transform 0.2s, box-shadow 0.2s;
            }

                #playlistList li:hover {
                    transform: scale(1.02);
                    box-shadow: 0 0 15px rgba(168,192,255,0.4);
                }

                #playlistList li.playing {
                    background-color: rgba(120,180,255,0.25);
                    font-weight: bold;
                    animation: glow 1.2s infinite alternate;
                }
        @@keyframes glow {
            0%

        {
            box-shadow: 0 0 10px rgba(168,192,255,0.3);
        }

        50% {
            box-shadow: 0 0 20px rgba(168,192,255,0.6);
        }

        100% {
            box-shadow: 0 0 10px rgba(168,192,255,0.3);
        }

        }

        .song-title {
            font-size: 16px;
            font-weight: 600;
            color: #c0d4ff;
            text-shadow: 0 0 5px rgba(168,192,255,0.4);
        }

        .buttons {
            display: flex;
            gap: 10px;
        }

            .buttons button {
                background: none;
                border: none;
                cursor: pointer;
                color: #a8c0ff;
                font-size: 16px;
                transition: transform 0.2s;
            }

                .buttons button:hover {
                    transform: scale(1.2);
                }

                .buttons button:active {
                    transform: scale(1.25);
                    box-shadow: 0 0 25px rgba(255,255,255,0.8);
                }

        #audioPlayer {
            width: 100%;
            margin-top: 15px;
            height: 40px;
            border-radius: 12px;
            background: rgba(255,255,255,0.1);
            outline: none;
            backdrop-filter: blur(5px);
        }
    </style>
</head>
<body>

    <nav class="navbar navbar-expand-sm">
        <div class="container">
            <ul class="navbar-nav mx-auto">
                <li class="nav-item"><a class="nav-link" asp-controller="Home" asp-action="Index">Home</a></li>
                <li class="nav-item"><a class="nav-link" asp-controller="Home" asp-action="Search">Search</a></li>
                <li class="nav-item"><a class="nav-link" asp-controller="Home" asp-action="PlayList">PlayList</a></li>
                <li class="nav-item"><a class="nav-link" asp-controller="Home" asp-action="Usercolumn">Usercolumn</a></li>
            </ul>
        </div>
    </nav>

    <div class="playlist-container">
        <h2>我的播放清單</h2>
        <ul id="playlistList">
            @foreach (var song in Model)
            {
                <li data-src="@song.file_path">
                    <span class="song-title">@song.title - @song.artist</span>
                    <div class="buttons">
                        <button class="play-btn">▶</button>
                        <button class="remove-btn">✖</button>
                    </div>
                </li>
            }
        </ul>
        <audio id="audioPlayer" controls></audio>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const audioPlayer = document.getElementById("audioPlayer");
            const playlist = document.getElementById("playlistList");
            let isPlaying = false;
            let currentLi = null;

            playlist.addEventListener("click", e => {
                const li = e.target.closest("li");
                if (!li || li.classList.contains("empty-message")) return;

                if (e.target.classList.contains("play-btn")) {
                    const src = li.dataset.src;
                    if(currentLi === li && isPlaying){
                        audioPlayer.pause();
                        isPlaying = false;
                    } else {
                        audioPlayer.src = src;
                        audioPlayer.play().then(() => {
                            playlist.querySelectorAll("li").forEach(i => i.classList.remove("playing"));
                            li.classList.add("playing");
                            isPlaying = true;
                            currentLi = li;
                        }).catch(err => console.log("播放失敗:", err));
                    }
                }

                if (e.target.classList.contains("remove-btn")) {
                    if (li.classList.contains("playing")) {
                        audioPlayer.pause();
                        audioPlayer.src = "";
                        isPlaying = false;
                        currentLi = null;
                    }
                    li.remove();

                    if(playlist.querySelectorAll("li").length === 0) {
                        const msg = document.createElement("li");
                        msg.classList.add("empty-message");
                        msg.textContent = "播放清單目前沒有歌曲 🎵";
                        playlist.appendChild(msg);
                    }
                }
            });

            audioPlayer.addEventListener("ended", () => {
                const items = playlist.querySelectorAll("li:not(.empty-message)");
                const currentIndex = Array.from(items).findIndex(i => i.classList.contains("playing"));
                const nextIndex = currentIndex + 1;
                if (nextIndex < items.length) {
                    const nextLi = items[nextIndex];
                    audioPlayer.src = nextLi.dataset.src;
                    audioPlayer.play();
                    items.forEach(i => i.classList.remove("playing"));
                    nextLi.classList.add("playing");
                    currentLi = nextLi;
                    isPlaying = true;
                }
            });
        });
    </script>

</body>
</html>
